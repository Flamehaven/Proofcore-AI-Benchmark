[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "proofcore"
version = "1.0.0"
description = "ProofCore - Hybrid Mathematical Proof Verification Engine"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Flamehaven", email = "noreply@flamehaven.com"}
]
keywords = ["proof", "verification", "mathematics", "symbolic", "semantic", "hybrid", "proofcore"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Education",
]

dependencies = [
    "sympy==1.12",
    "numpy==1.24.0",
    "pydantic==2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]
backend = [
    # FastAPI and server
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.27.0",
    "python-multipart>=0.0.6",

    # Database (async PostgreSQL)
    "sqlalchemy[asyncio]>=2.0.25",
    "asyncpg>=0.29.0",

    # Configuration and validation
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",

    # HTTP client for LLM APIs
    "httpx>=0.26.0",
]
llm = [
    # Optional: Real LLM integrations for v3.8.0
    "openai>=1.10.0",
    "anthropic>=0.8.1",
    "google-generativeai>=0.3.2",
]

[project.scripts]
proofcore = "proofcore.cli:main"

[project.urls]
Homepage = "https://github.com/flamehaven/proofcore"
Documentation = "https://proofcore.readthedocs.io"
Repository = "https://github.com/flamehaven/proofcore"
Issues = "https://github.com/flamehaven/proofcore/issues"

[tool.setuptools.packages.find]
where = ["python"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=proofbench --cov-report=html --cov-report=term --cov-fail-under=85"

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py38"
select = ["E", "F", "I", "N", "W"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
